# Generated by Django 4.0.5 on 2022-06-21 10:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('inventory_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomerInfo',
            fields=[
                ('customer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('customer_name', models.CharField(max_length=50)),
                ('customer_contact', models.IntegerField()),
                ('customer_email', models.EmailField(max_length=254)),
                ('customer_address', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('invoice_id', models.IntegerField(primary_key=True, serialize=False)),
                ('invoice_no', models.IntegerField(unique=True)),
                ('invoice_datetime', models.DateTimeField()),
                ('total_amount_without_gst', models.FloatField()),
                ('total_amount_without_offers', models.FloatField()),
                ('total_amount_with_gst_and_offers', models.FloatField()),
                ('customerinfo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing_app.customerinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('product_id', models.IntegerField(primary_key=True, serialize=False)),
                ('product_quantity', models.FloatField()),
                ('product_price', models.FloatField()),
                ('product_total_price', models.FloatField()),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='billing_app.invoice')),
                ('product_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory_app.productinfo')),
            ],
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('offer_id', models.IntegerField(primary_key=True, serialize=False)),
                ('offer_name', models.CharField(max_length=50)),
                ('offer_start_date', models.DateTimeField()),
                ('offer_end_date', models.DateTimeField()),
                ('discount_in_percentile', models.FloatField()),
                ('discount_in_price', models.FloatField()),
                ('productinfo', models.ManyToManyField(to='inventory_app.productinfo')),
            ],
        ),
    ]
